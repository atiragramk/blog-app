{"version":3,"file":"static/js/590.54c7fc9f.chunk.js","mappings":"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","sources":["components/ErrorBoundary/ErrorBoundary.js","components/ErrorMessage/styled.js","components/ErrorMessage/ErrorMessage.js","propTypes/bookItemPropType.js","pages/BookList/components/BookCard/styled.js","pages/BookList/components/BookCard/BookCard.js","pages/BookList/styled.js","pages/BookList/selectors/bookList.js","components/Pagination/styled.js","components/Pagination/BookPagination.js","components/PreLoader/PreLoader.js","components/Pagination/selectors/pagination.js","store/modal/selectors/modal.js","components/Modal/styled.js","components/Modal/Modal.js","pages/BookList/components/BookForm/BookForm.js","pages/BookList/components/DeleteBookModal/styled.js","pages/BookList/components/CreateBookModal/CreateBookModal.js","pages/BookList/components/UpdateBookModal/UpdateBookModal.js","pages/BookList/components/DeleteBookModal/DeleteBookModal.js","pages/BookList/constants.js","pages/BookList/BookList.js"],"sourcesContent":["import { Component } from \"react\";\nimport { ErrorMessage } from \"../ErrorMessage\";\n\nexport class ErrorBoundary extends Component {\n  state = {\n    error: false,\n  };\n\n  componentDidCatch(error) {\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n    return this.props.children;\n  }\n}\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledImage = styled.img`\n  margin: 0 auto;\n  display: block;\n`;\n\nexport const StyledLink = styled(Link)`\n  max-width: fit-content;\n  display: block;\n  margin: 10px auto;\n  border: 1px solid rgb(255 186 89);\n  color: rgb(69 79 99);\n  text-decoration: none;\n  padding: 5px 10px;\n  border-radius: 3px;\n  &:hover {\n    color: #fff;\n    background-color: rgb(255 186 89);\n  }\n`;\n","import { StyledImage, StyledLink } from \"./styled\";\n\nimport error from \"../../assets/img/error.gif\";\n\nexport const ErrorMessage = () => {\n  return (\n    <div>\n      <StyledImage src={error} alt=\"error\" />\n      <StyledLink to=\"/\">Back to Main</StyledLink>\n    </div>\n  );\n};\n","import PropTypes from \"prop-types\";\n\nexport const bookItemDataPropType = PropTypes.shape({\n  _id: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  pageCount: PropTypes.string,\n  publishDate: PropTypes.string,\n  createdAt: PropTypes.string,\n  updatedAt: PropTypes.string,\n});\n","import styled from \"styled-components\";\nimport { Card, CardSubtitle, CardText, CardTitle } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"antd/lib/button\";\n\nexport const StyledCard = styled(Card)`\n  position: relative;\n  margin: 10px;\n  width: 400px;\n  height: 260px;\n  text-align: center;\n  border-radius: 2px;\n  box-shadow: 0px 1px 5px rgb(244 233 235);\n`;\n\nexport const StyledButton = styled(Button)`\n  position: absolute;\n  right: ${({ edit }) => (edit ? \"50px\" : \"10px\")};\n  color: rgb(69 79 99);\n  padding: 6px 7px;\n  background-color: transparent;\n  border-color: rgb(255 186 89);\n  span {\n    display: inline-flex;\n    align-items: center;\n  }\n  &:hover {\n    background-color: rgb(255 186 89);\n    border-color: rgb(255 186 89);\n    color: #fff;\n  }\n\n  &:active:focus {\n    background-color: rgb(255 186 89);\n    border-color: rgb(255 186 89);\n  }\n  &:active {\n    background-color: rgb(255 186 89);\n    border-color: rgb(255 186 89);\n    color: #fff;\n  }\n  &:focus {\n    box-shadow: 0 0 0 0.25rem rgb(255 186 89 / 50%);\n    background-color: rgb(255 186 89);\n    border-color: rgb(255 186 89);\n    color: #fff;\n  }\n`;\n\nexport const StyledCardTitle = styled(CardTitle)`\n  font-weight: bold;\n  margin-top: 40px;\n  min-height: 50px;\n  color: rgb(69 79 99);\n`;\n\nexport const StyledCardText = styled(CardText)`\n  min-height: 80px;\n  margin-bottom: 15px;\n  font-size: 16px;\n  color: rgb(69 79 99);\n`;\n\nexport const StyledDate = styled(CardSubtitle)`\n  font-style: italic;\n  color: rgb(69 79 99);\n`;\n\nexport const StyledLink = styled(Link)`\n  border: 1px solid rgb(255 186 89);\n  color: rgb(69 79 99);\n  text-decoration: none;\n  position: absolute;\n  right: 10px;\n  padding: 3px 5px;\n  min-width: 65px;\n  border-radius: 3px;\n  &:hover {\n    color: #fff;\n    background-color: rgb(255 186 89);\n  }\n`;\n\nexport const StyledWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","import { CardBody } from \"reactstrap\";\nimport moment from \"moment\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\nimport { bookItemDataPropType } from \"../../../../propTypes/bookItemPropType\";\n\nimport {\n  StyledCard,\n  StyledLink,\n  StyledWrapper,\n  StyledCardTitle,\n  StyledCardText,\n  StyledDate,\n  StyledButton,\n} from \"./styled\";\nimport React from \"react\";\n\nexport const BookCard = ({ data, onEdit, onDelete }) => {\n  const { _id: id, title, description, publishDate } = data;\n  const shortText =\n    description.length > 130 ? `${description.slice(0, 130)}...` : description;\n  const date = moment(publishDate).format(\"DD/MM/YYYY\");\n\n  return (\n    <StyledCard size=\"small\">\n      <CardBody>\n        <StyledButton onClick={() => onEdit(id)} type=\"default\" edit=\"edit\">\n          <EditOutlined />\n        </StyledButton>\n        <StyledButton onClick={() => onDelete(data)} type=\"default\">\n          <DeleteOutlined />\n        </StyledButton>\n\n        <StyledCardTitle tag=\"h5\">{title}</StyledCardTitle>\n        <StyledCardText tag=\"p\">{shortText}</StyledCardText>\n        <StyledWrapper>\n          <StyledDate>{date}</StyledDate>\n          <StyledLink to={`/books/${id}`}>More</StyledLink>\n        </StyledWrapper>\n      </CardBody>\n    </StyledCard>\n  );\n};\n\nBookCard.propTypes = {\n  data: bookItemDataPropType.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import styled from \"styled-components\";\nimport { Container } from \"reactstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport Button from \"antd/lib/button\";\nimport Spin from \"antd/lib/spin\";\n\nexport const StyledButton = styled(Button)`\n  display: block;\n  margin: 20px auto;\n  background-color: rgb(255 186 89);\n  color: rgb(63 65 69);\n  border-color: rgb(255 186 89);\n  &:hover {\n    background-color: transparent;\n    border-color: rgb(255 186 89);\n    color: rgb(255 186 89);\n  }\n  &:active:focus {\n    background-color: rgb(255 186 89);\n    border-color: rgb(255 186 89);\n  }\n  &:active {\n    background-color: rgb(255 186 89);\n    border-color: rgb(255 186 89);\n    color: rgb(63 65 69);\n  }\n  &:focus {\n    box-shadow: 0 0 0 0.25rem rgb(255 186 89 / 50%);\n    color: rgb(63 65 69);\n  }\n`;\n\nexport const StyledSpinner = styled(Spin)`\n  .ant-spin-dot-item {\n    background-color: rgb(255 186 89);\n  }\n`;\n\nexport const StyledContainer = styled(Container)`\n  display: flex;\n  justify-content: center;\n  padding: 0;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nexport const StyledReactPaginate = styled(ReactPaginate)`\n  display: flex;\n  list-style: none;\n  margin: 30px auto;\n  padding-left: 0px;\n  width: fit-content;\n  border: 1px solid rgb(186 182 182);\n  border-radius: 5px;\n\n  li {\n    padding: 7px 15px;\n    color: rgb(110 45 53);\n    border-left: 1px solid #dee2e6;\n    &.active {\n      background-color: rgb(110 45 53);\n      color: white;\n    }\n  }\n  a {\n    color: rgb(110 45 53);\n    text-decoration: none;\n    &.disabled {\n      pointer-events: none;\n      color: gray;\n    }\n  }\n`;\n","import { createSelector } from \"reselect\";\n\nconst bookListStateSelector = (state) => state.bookList;\n\nexport const bookListLoadingSelector = createSelector(\n  bookListStateSelector,\n  (bookList) => bookList.loading\n);\n\nexport const bookListDataSelector = createSelector(\n  bookListStateSelector,\n  (bookList) => bookList.data\n);\n\nexport const bookListErrorSelector = createSelector(\n  bookListStateSelector,\n  (bookList) => bookList.error\n);\n\nexport const bookListUpdateStateSelector = createSelector(\n  bookListStateSelector,\n  (bookList) => bookList.updateState\n);\n\nexport const bookListCreateStateSelector = createSelector(\n  bookListStateSelector,\n  (bookList) => bookList.createState\n);\n\nexport const bookListDeleteStateSelector = createSelector(\n  bookListStateSelector,\n  (bookList) => bookList.deleteState\n);\n","import { Pagination, PaginationLink } from \"reactstrap\";\n\nimport styled from \"styled-components\";\n\nexport const StyledPagination = styled(Pagination)`\n  ul {\n    justify-content: center;\n    margin: 20px 0;\n    text-align: center;\n    padding-bottom: 20px;\n  }\n`;\n\nexport const StyledPaginationLink = styled(PaginationLink)`\n  min-width: 42px;\n  color: ${({ active }) => (active ? \"rgb(69 79 99)\" : \"rgb(69 79 99)\")};\n  background-color: ${({ active }) =>\n    active ? \"rgb(255 186 89)\" : \"rgb(255 255 255)\"};\n  &:hover {\n    background-color: rgb(69 79 89 / 20%);\n    color: rgb(255 186 89);\n  }\n  &:focus {\n    color: rgb(69 79 89);\n    background-color: rgb(255 186 89);\n    box-shadow: none;\n  }\n`;\n","import { PaginationItem } from \"reactstrap\";\nimport { StyledPagination, StyledPaginationLink } from \"./styled\";\nimport PropTypes from \"prop-types\";\n\nexport const BookPagination = (props) => {\n  const { currentPage, pageCount, onPagination } = props;\n\n  return (\n    <StyledPagination>\n      <PaginationItem disabled={currentPage <= 0}>\n        <StyledPaginationLink\n          onClick={() => onPagination(currentPage - 1)}\n          previous\n          tag=\"button\"\n        />\n      </PaginationItem>\n\n      {[...Array(pageCount).keys()].map((page, index) => (\n        <PaginationItem key={page}>\n          <StyledPaginationLink\n            tag=\"button\"\n            active={index === currentPage ? \"active\" : null}\n            onClick={() => onPagination(index)}\n          >\n            {index + 1}\n          </StyledPaginationLink>\n        </PaginationItem>\n      ))}\n\n      <PaginationItem disabled={currentPage >= pageCount - 1}>\n        <StyledPaginationLink\n          tag=\"button\"\n          onClick={() => onPagination(currentPage + 1)}\n          next\n        />\n      </PaginationItem>\n    </StyledPagination>\n  );\n};\n\nBookPagination.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  pageCount: PropTypes.number.isRequired,\n  onPagination: PropTypes.func.isRequired,\n};\n","import { Skeleton, Space } from \"antd\";\n\nexport const PreLoader = () => {\n  return (\n    <>\n      <Space\n        direction=\"vertical\"\n        size=\"large\"\n        style={{\n          alignItems: \"flex-end\",\n          width: \"400px\",\n          height: \"250px\",\n          margin: \"20px 10px\",\n        }}\n      >\n        <Space>\n          <Skeleton.Button shape=\"round\" size=\"small\" active />\n          <Skeleton.Button shape=\"round\" size=\"small\" active />\n        </Space>\n        <Skeleton.Input size=\"large\" active style={{ width: \"380px\" }} />\n        <Skeleton.Input size=\"large\" active style={{ width: \"380px\" }} />\n        <Skeleton.Input size=\"default\" active style={{ width: \"380px\" }} />\n      </Space>\n    </>\n  );\n};\n","import { createSelector } from \"reselect\";\n\nconst bookListStateSelector = (state) => state.bookList;\nconst paginationSelector = (state) => state.pagination;\n\nexport const bookListPaginationSelector = createSelector(\n  bookListStateSelector,\n  paginationSelector,\n  (bookList, pagination) => {\n    return {\n      page: pagination.page,\n      offset: pagination.offset,\n      itemsPerPage: pagination.itemsPerPage,\n      endOffset: pagination.offset + pagination.itemsPerPage,\n    };\n  }\n);\n\n","export const modalStateSelector = (state) => state.modal;\n","import styled from \"styled-components\";\n\nimport Button from \"antd/lib/button\";\n\nexport const StyledButton = styled(Button)`\n  color: rgb(69 79 99);\n  padding: 3px 15px;\n  background-color: transparent;\n  border-color: rgb(255 186 89);\n\n  &:hover {\n    background-color: rgb(255 186 89);\n    border-color: rgb(255 186 89);\n    color: #fff;\n  }\n  &:active:focus {\n    background-color: rgb(255 186 89);\n    border-color: rgb(255 186 89);\n  }\n  &:active {\n    background-color: rgb(255 186 89);\n    border-color: rgb(255 186 89);\n    color: #fff;\n  }\n  &:focus {\n    box-shadow: 0 0 0 0.25rem rgb(255 186 89);\n    background-color: rgb(255 186 89);\n    border-color: rgb(255 186 89);\n    color: #fff;\n  }\n`;\n","import { Button, Modal as AntdModal, Typography } from \"antd\";\nimport { StyledButton } from \"./styled\";\nimport PropTypes from \"prop-types\";\n\nconst { Text } = Typography;\nexport const Modal = ({\n  children,\n  onCancel,\n  formName,\n  loading,\n  onSave,\n  disable,\n}) => {\n  return (\n    <AntdModal\n      visible={true}\n      onCancel={onCancel}\n      confirmLoading={loading}\n      footer={[\n        <StyledButton\n          key=\"cancel\"\n          loading={loading}\n          onClick={onCancel}\n          disabled={loading}\n        >\n          Cancel\n        </StyledButton>,\n        <Button\n          key=\"submit\"\n          type=\"primary\"\n          disabled={disable}\n          danger={!formName}\n          loading={loading}\n          htmlType=\"submit\"\n          form={formName}\n          onClick={onSave}\n        >\n          Confirm\n        </Button>,\n      ]}\n    >\n      {children}\n    </AntdModal>\n  );\n};\n\nModal.defaultProps = {\n  onSave: () => {},\n  formName: \"\",\n  disable: false,\n  children: <Text>Modal window</Text>,\n  loading: false,\n  onCancel: () => {},\n};\n\nModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  formName: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  onSave: PropTypes.func,\n  disable: PropTypes.bool,\n};\n","// @ts-nocheck\nimport React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { Input, Typography } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { bookItemDataPropType } from \"../../../../propTypes/bookItemPropType\";\n\nconst createBookSchema = yup.object().shape({\n  title: yup.string().required(\"This field is required\"),\n  description: yup.string().required(\"This field is required\"),\n  pageCount: yup\n    .number()\n    .typeError(\"Value must be a number\")\n    .required(\"This field is required\")\n    .integer(\"Value must be an integer\")\n    .positive(\"Value must be a positive number.\"),\n});\n\n/**\n * Book form component\n * @type {React.FC<InferProps<BookForm.propTypes>>}\n * @returns {React.ReactElement | React.ReactComponentElement}\n */\nexport const BookForm = (props) => {\n  const { mode, data, name, onSave } = props;\n  const { Text, Title } = Typography;\n  const { TextArea } = Input;\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(createBookSchema),\n  });\n  /**\n   * Handle submit form function\n   * @async\n   * @type {import(\"react-hook-form\").SubmitHandler<import(\"react-hook-form\").FieldValues>}\n   * @param {any} values - book data\n   */\n  const onSubmit = async (values) => {\n    try {\n      if (!data) {\n        onSave(values);\n      } else {\n        onSave({ ...values, id: data._id });\n      }\n    } catch (error) {}\n  };\n\n  return (\n    <>\n      {mode === \"create\" && <Title level={3}>Create Book</Title>}\n      {mode === \"edit\" && <Title level={3}>Update Book</Title>}\n      <form onSubmit={handleSubmit(onSubmit)} id={name}>\n        <label>Book Title</label>\n        <Controller\n          render={({ field }) => <Input {...field} />}\n          name=\"title\"\n          control={control}\n          defaultValue={data?.title || \"\"}\n        />\n        {errors.title && (\n          <Text style={{ display: \"block\" }} type=\"danger\">\n            {errors.title.message}\n          </Text>\n        )}\n        <label>Description</label>\n        <Controller\n          render={({ field }) => (\n            <TextArea style={{ height: \"80px\" }} {...field} />\n          )}\n          name=\"description\"\n          control={control}\n          defaultValue={data?.description || \"\"}\n        />\n        {errors.description && (\n          <Text style={{ display: \"block\" }} type=\"danger\">\n            {errors.description.message}\n          </Text>\n        )}\n\n        <label>Page Count</label>\n        <Controller\n          render={({ field }) => <Input {...field} />}\n          name=\"pageCount\"\n          control={control}\n          defaultValue={data?.pageCount}\n        />\n        {errors.pageCount && (\n          <Text style={{ display: \"block\" }} type=\"danger\">\n            {errors.pageCount.message}\n          </Text>\n        )}\n      </form>\n    </>\n  );\n};\n\nBookForm.defaultProps = {\n  data: null,\n  mode: \"create\",\n  name: \"create\",\n  onSave: () => {},\n};\n\nBookForm.propTypes = {\n  mode: PropTypes.string,\n  data: bookItemDataPropType,\n  name: PropTypes.string,\n  onSave: PropTypes.func,\n};\n","import styled from \"styled-components\";\nimport Spin from \"antd/lib/spin\";\n\nexport const StyledSpin = styled(Spin)`\n  display: block;\n  .ant-spin-dot {\n    display: flex;\n    margin: 10px auto;\n  }\n  .ant-spin-dot-item {\n    background-color: rgb(255 186 89);\n  }\n`;\n","import { useSelector } from \"react-redux\";\nimport { Modal } from \"../../../../components/Modal\";\nimport { bookListCreateStateSelector } from \"../../selectors/bookList\";\nimport { BookForm } from \"../BookForm/BookForm\";\nimport PropTypes from \"prop-types\";\nimport { StyledSpin } from \"../DeleteBookModal/styled\";\n\nexport const CreateBookModal = ({ onSave, onCancel }) => {\n  const { loading } = useSelector(bookListCreateStateSelector);\n\n  return (\n    <Modal onCancel={onCancel} formName=\"create\" loading={loading}>\n      <StyledSpin spinning={loading}>\n        <BookForm mode=\"create\" onSave={onSave} name=\"create\" />\n      </StyledSpin>\n    </Modal>\n  );\n};\n\nCreateBookModal.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Modal } from \"../../../../components/Modal\";\nimport { bookListUpdateStateSelector } from \"../../selectors/bookList\";\nimport { bookItemUpdateDataFetch } from \"../../thunk/bookList\";\nimport { BookForm } from \"../BookForm/BookForm\";\nimport { StyledSpin } from \"../DeleteBookModal/styled\";\nimport { Typography } from \"antd\";\nimport PropTypes from \"prop-types\";\n\nexport const UpdateBookModal = ({ onSave, onCancel }) => {\n  const dispatch = useDispatch();\n  const { fetchData, data, loading } = useSelector(bookListUpdateStateSelector);\n  const { Text } = Typography;\n\n  useEffect(() => {\n    dispatch(bookItemUpdateDataFetch(fetchData));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Modal\n      loading={loading}\n      form=\"edit\"\n      onCancel={onCancel}\n      formName=\"edit\"\n      disable={!data}\n    >\n      <StyledSpin size=\"middle\" spinning={loading}>\n        {Object.keys(data).length > 0 && (\n          <BookForm mode=\"edit\" onSave={onSave} data={data} name=\"edit\" />\n        )}\n        {!data && <Text type=\"danger\"> Something went wrong</Text>}\n      </StyledSpin>\n    </Modal>\n  );\n};\n\nUpdateBookModal.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\n","import { useSelector } from \"react-redux\";\nimport { Modal } from \"../../../../components/Modal\";\nimport { bookListDeleteStateSelector } from \"../../selectors/bookList\";\nimport { StyledSpin } from \"./styled\";\nimport { Space, Typography } from \"antd\";\nimport PropTypes from \"prop-types\";\n\nexport const DeleteBookModal = ({ onSave, onCancel }) => {\n  const { loading, data } = useSelector(bookListDeleteStateSelector);\n\n  const { Title, Text } = Typography;\n\n  return (\n    <Modal onCancel={onCancel} onSave={() => onSave(data)} loading={loading}>\n      <StyledSpin spinning={loading}>\n        {data && (\n          <Space direction=\"vertical\">\n            <Title level={5}>\n              Are you sure that you want to delete{\" \"}\n              <Text underline italic>\n                {data.title}\n              </Text>\n              ?\n            </Title>\n\n            <Text>\n              The item will be deleted immediately. You can not undo this\n              action.\n            </Text>\n          </Space>\n        )}\n      </StyledSpin>\n    </Modal>\n  );\n};\n\nDeleteBookModal.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\n","export const MODAL_CREATE_NAME = \"MODAL_CREATE_NAME\";\nexport const MODAL_UPDATE_NAME = \"MODAL_UPDATE_NAME\";\nexport const MODAL_DELETE_NAME = \"MODAL_DELETE_NAME\";\n","//@ts-check\nimport React from \"react\";\nimport { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container } from \"reactstrap\";\nimport { BookCard } from \"./components/BookCard\";\nimport { ErrorMessage } from \"../../components/ErrorMessage\";\nimport { ErrorBoundary } from \"../../components/ErrorBoundary\";\nimport { StyledButton, StyledContainer, StyledSpinner } from \"./styled\";\nimport * as selectors from \"./selectors/bookList\";\nimport { BookPagination } from \"../../components/Pagination\";\nimport { PreLoader } from \"../../components/PreLoader\";\nimport { bookPaginationSet } from \"../../components/Pagination/reducer/pagination\";\nimport { bookListPaginationSelector } from \"../../components/Pagination/selectors/pagination\";\nimport { modalStateSelector } from \"../../store/modal/selectors/modal\";\nimport { modalOpenToggleAction } from \"../../store/modal/reducer/modal\";\nimport { CreateBookModal } from \"./components/CreateBookModal\";\nimport { UpdateBookModal } from \"./components/UpdateBookModal\";\nimport { DeleteBookModal } from \"./components/DeleteBookModal\";\nimport {\n  bookDeleteItemDataSetAction,\n  bookUpdateItemIdSetAction,\n  bookListResetAction,\n} from \"./reducer/bookList\";\nimport {\n  bookItemCreate,\n  bookItemDelete,\n  bookItemUpdate,\n  bookListFetch,\n} from \"./thunk/bookList\";\nimport {\n  MODAL_CREATE_NAME,\n  MODAL_UPDATE_NAME,\n  MODAL_DELETE_NAME,\n} from \"./constants\";\n/**\n * Book list component\n * @type {React.FC}\n * @returns {React.ReactElement}\n *\n */\nconst BookList = () => {\n  const loading = useSelector(selectors.bookListLoadingSelector);\n  const error = useSelector(selectors.bookListErrorSelector);\n  const data = useSelector(selectors.bookListDataSelector);\n  const { offset, page, itemsPerPage, endOffset } = useSelector(\n    bookListPaginationSelector\n  );\n\n  const { open, name } = useSelector(modalStateSelector);\n\n  const bookList = data.slice(offset, endOffset);\n  const pageCount = Math.ceil(data.length / itemsPerPage);\n\n  const dispatch = useDispatch();\n\n  /**\n   * @type {React.EffectCallback}\n   */\n  useEffect(\n    /**\n     * Use effect\n     * @returns {any}\n     */\n    () => {\n      // @ts-ignore\n      dispatch(bookListFetch());\n      return () => dispatch(bookListResetAction());\n    },\n    [dispatch]\n  );\n\n  /**\n   * Pagination function\n   * @param {number} index  - index of current page\n   */\n  const handlePagination = (index) => {\n    const newOffset = (index * itemsPerPage) % data.length;\n    dispatch(bookPaginationSet({ page: index, offset: newOffset }));\n  };\n  /**\n   * Create book function\n   * @param {{title: string, description: string, pageCount: number}} values - book data\n   */\n  const handleCreateBook = (values) => {\n    // @ts-ignore\n    dispatch(bookItemCreate(values));\n  };\n  /**\n   * Update book function\n   * @param {{title: string, description: string, pageCount: number, id: string}} values - book data\n   */\n  const handleUpdateBook = (values) => {\n    // @ts-ignore\n    dispatch(bookItemUpdate(values));\n  };\n  /**\n   * Delete book function\n   * @param {{title: string, description: string, pageCount: number, _id: string}} item - book data\n   */\n  const handleDeleteBook = (item) => {\n    // @ts-ignore\n    dispatch(bookItemDelete(item));\n  };\n  /**\n   * Create modal toggle function\n   */\n  const handleCreateModalOpenToggle = () => {\n    dispatch(modalOpenToggleAction({ name: MODAL_CREATE_NAME }));\n  };\n\n  /**\n   * Edit modal function\n   */\n  const handleEditModalOpen = useCallback(\n    /**\n     *\n     * @param {string} id\n     */\n    (id) => {\n      dispatch(bookUpdateItemIdSetAction({ id }));\n      dispatch(modalOpenToggleAction({ name: MODAL_UPDATE_NAME }));\n      // eslint-disable-next-line\n    },\n    []\n  );\n  /**\n   * Update modal toggle function\n   */\n  const handleEditModalClose = useCallback(() => {\n    dispatch(modalOpenToggleAction({ name: MODAL_UPDATE_NAME }));\n    // eslint-disable-next-line\n  }, []);\n\n  /**\n   * Delete modal function\n   */\n  const handleDeleteModalOpen = useCallback(\n    /**\n     *\n     * @param {{title: string, description: string, pageCount: number, _id: string}} item - book data\n     */\n    (item) => {\n      dispatch(bookDeleteItemDataSetAction(item));\n      dispatch(modalOpenToggleAction({ name: MODAL_DELETE_NAME }));\n      // eslint-disable-next-line\n    },\n    []\n  );\n\n  return (\n    <ErrorBoundary>\n      <Container>\n        <StyledButton onClick={handleCreateModalOpenToggle} type=\"primary\">\n          Create book\n        </StyledButton>\n        {\n          <>\n            <StyledSpinner\n              spinning={loading}\n              style={{ maxHeight: \"none\" }}\n              size=\"large\"\n            >\n              <StyledContainer>\n                {loading && !error && data.length === 0 && (\n                  <>\n                    {[...Array(bookList.length || itemsPerPage).keys()].map(\n                      (item) => (\n                        <PreLoader key={item} />\n                      )\n                    )}\n                  </>\n                )}\n                {!error && data.length > 0 && (\n                  <>\n                    {bookList.map(\n                      (\n                        /** @type {import(\"prop-types\").InferProps<{ _id: import(\"prop-types\").Requireable<string>; title: import(\"prop-types\").Requireable<string>; description: import(\"prop-types\").Requireable<string>; pageCount: import(\"prop-types\").Requireable<string>; publishDate: import(\"prop-types\").Requireable<string>; createdAt: import(\"prop-types\").Requireable<string>; updatedAt: import(\"prop-types\").Requireable<string>; }>} */ book\n                      ) => (\n                        <BookCard\n                          key={book._id}\n                          data={book}\n                          onEdit={handleEditModalOpen}\n                          onDelete={handleDeleteModalOpen}\n                        />\n                      )\n                    )}\n                  </>\n                )}\n              </StyledContainer>\n            </StyledSpinner>\n            {!loading && !error && data.length > 0 && (\n              <BookPagination\n                currentPage={page}\n                onPagination={handlePagination}\n                pageCount={pageCount}\n              />\n            )}\n          </>\n        }\n        {open && name === MODAL_CREATE_NAME && (\n          <CreateBookModal\n            onSave={handleCreateBook}\n            onCancel={handleCreateModalOpenToggle}\n          />\n        )}\n        {open && name === MODAL_UPDATE_NAME && (\n          <UpdateBookModal\n            onSave={handleUpdateBook}\n            onCancel={handleEditModalClose}\n          />\n        )}\n        {open && name === MODAL_DELETE_NAME && (\n          <DeleteBookModal\n            onSave={handleDeleteBook}\n            onCancel={handleDeleteModalOpen}\n          />\n        )}\n        {error && !loading && <ErrorMessage />}\n      </Container>\n    </ErrorBoundary>\n  );\n};\n\nexport default BookList;\n"],"names":["ErrorBoundary","state","error","this","setState","ErrorMessage","props","children","Component","StyledImage","styled","StyledLink","Link","src","alt","to","PropTypes","_id","title","description","pageCount","publishDate","createdAt","updatedAt","StyledCard","Card","StyledButton","Button","edit","StyledCardTitle","CardTitle","StyledCardText","CardText","StyledDate","CardSubtitle","StyledWrapper","BookCard","data","onEdit","onDelete","id","shortText","length","slice","date","moment","format","size","onClick","type","EditOutlined","DeleteOutlined","tag","StyledSpinner","Spin","StyledContainer","Container","ReactPaginate","bookListStateSelector","bookList","bookListLoadingSelector","createSelector","loading","bookListDataSelector","bookListErrorSelector","bookListUpdateStateSelector","updateState","bookListCreateStateSelector","createState","bookListDeleteStateSelector","deleteState","StyledPagination","Pagination","StyledPaginationLink","PaginationLink","active","BookPagination","currentPage","onPagination","disabled","previous","Array","keys","map","page","index","next","PreLoader","direction","style","alignItems","width","height","margin","shape","bookListPaginationSelector","pagination","offset","itemsPerPage","endOffset","modalStateSelector","modal","Text","Typography","Modal","onCancel","formName","onSave","disable","visible","confirmLoading","footer","danger","htmlType","form","defaultProps","createBookSchema","yup","required","typeError","integer","positive","BookForm","mode","name","Title","TextArea","Input","useForm","resolver","yupResolver","control","handleSubmit","errors","formState","onSubmit","values","level","render","field","defaultValue","display","message","StyledSpin","CreateBookModal","useSelector","spinning","UpdateBookModal","dispatch","useDispatch","fetchData","useEffect","bookItemUpdateDataFetch","Object","DeleteBookModal","underline","italic","MODAL_CREATE_NAME","MODAL_UPDATE_NAME","MODAL_DELETE_NAME","selectors","open","Math","ceil","bookListFetch","bookListResetAction","handleCreateModalOpenToggle","modalOpenToggleAction","handleEditModalOpen","useCallback","bookUpdateItemIdSetAction","handleEditModalClose","handleDeleteModalOpen","item","bookDeleteItemDataSetAction","maxHeight","book","newOffset","bookPaginationSet","bookItemCreate","bookItemUpdate","bookItemDelete"],"sourceRoot":""}