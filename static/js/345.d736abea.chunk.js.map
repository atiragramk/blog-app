{"version":3,"file":"static/js/345.d736abea.chunk.js","mappings":"kMAEaA,E,MAASC,GAAAA,OAAa,CAC/BC,QAAS,iDAGbF,EAAOG,aAAaC,SAASC,KACzB,SAACD,GAAD,OAAcA,EAASE,QACvB,SAACC,GAAD,OAAWC,QAAQC,OAAOF,MCNvB,IAAMG,EAAW,yCAAG,4GAEVV,EAAOW,IAAI,UAFD,+JAAH,qDAQXC,EAAO,yCAAG,WAAOC,GAAP,+FAENb,EAAOW,IAAP,iBAAqBE,IAFf,+JAAH,uD,6HCPPC,EAAb,gMACEC,MAAQ,CACNR,OAAO,GAFX,kDAKE,SAAkBA,GAChBS,KAAKC,SAAS,CACZV,OAAO,MAPb,oBAWE,WACE,OAAIS,KAAKD,MAAMR,OACN,SAACW,EAAA,EAAD,IAEFF,KAAKG,MAAMC,aAftB,GAAmCC,EAAAA,Y,oECDtBC,E,QAAcC,GAAAA,IAAH,8D,6DCGXL,EAAe,WAExB,OACI,0BACI,SAACI,EAAD,CAAaE,IAAKjB,EAAOkB,IAAI,c,gGCP5BC,EAAW,SAACC,GACvB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOtB,EAAP,KAAauB,EAAb,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOrB,EAAP,KAAcyB,EAAd,KAEMC,GAAUC,EAAAA,EAAAA,cAAW,uBAAC,kHAGDP,IAHC,cAGlBvB,EAHkB,OAIxByB,EAAQzB,GACR2B,GAAW,GALa,kBAMjB3B,GANiB,gCAQxB2B,GAAW,GACXC,EAAS,EAAD,IATgB,yBAWxBD,GAAW,GAXa,4EAazB,CAACJ,IAMJ,OAJAQ,EAAAA,EAAAA,YAAU,WACRF,MACC,CAACA,IAEG,CAAEA,QAAAA,EAAS3B,KAAAA,EAAMwB,QAAAA,EAASvB,MAAAA,K,uJCtBtB6B,EAAgBb,EAAAA,GAAAA,IAAH,2FAMbc,EAAed,EAAAA,GAAAA,GAAH,mEAKZe,EAAaf,EAAAA,GAAAA,EAAH,+DAKVgB,EAAahB,EAAAA,GAAAA,KAAH,+CAIViB,GAAajB,EAAAA,EAAAA,IAAOkB,EAAAA,GAAPlB,CAAH,+PAaVmB,GAAgBnB,EAAAA,EAAAA,IAAOoB,EAAAA,GAAPpB,CAAH,uF,sCCrBbqB,EAAW,WAEtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCnB,EAAAA,EAAAA,IAAS,kBAAMd,EAAAA,EAAAA,GAAQiC,MAA/CvC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOuB,EAArB,EAAqBA,QAGbiB,GADSC,EAAAA,EAAAA,MACWjC,MAApBgC,OAEAE,EAAoC3C,EAApC2C,YAAaC,EAAuB5C,EAAvB4C,MAAOC,EAAgB7C,EAAhB6C,YACtBC,EAAOC,IAAOF,GAAaG,OAAO,cAExC,OACE,UAAC,KAAD,WACGxB,IAAYvB,IAAS,SAACmC,EAAD,KACpBZ,IAAYvB,IACZ,iCACE,UAAC6B,EAAD,YACE,SAACC,EAAD,UAAea,KACf,SAACZ,EAAD,UAAaW,KACb,SAACV,EAAD,UAAaa,QAEf,SAACZ,EAAD,CAAYzB,MAAO,CAAEgC,OAAQA,GAAUQ,GAAG,SAA1C,6BAKHhD,IAAUuB,IAAW,SAACZ,EAAA,EAAD,Q,UCvCb,SAASsC,IACtB,OACE,SAAC1C,EAAA,EAAD,WACE,SAAC8B,EAAD","sources":["api/client.js","api/books.js","components/ErrorBoundary/ErrorBoundary.js","components/ErrorMessage/styled.js","components/ErrorMessage/ErrorMessage.js","hooks/useAxios.js","components/BookInfo/styled.js","components/BookInfo/BookInfo.js","pages/SingleBook/SingleBook.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const client = axios.create({\n    baseURL: \"https://fakerestapi.azurewebsites.net/api/v1\"\n});\n\nclient.interceptors.response.use(\n    (response) => response.data, \n    (error) => Promise.reject(error));","import { client } from \"./client\";\n\nexport const getAllBooks = async () => {\n  try {\n    return await client.get(\"/Books\");\n  } catch (error) {\n    return error ;\n  }\n};\n\nexport const getBook = async (id) => {\n  try {\n    return await client.get(`/Books/${id}`);\n  } catch (error) {\n    return error;\n  }\n};\n","import { Component } from \"react\";\nimport { ErrorMessage } from \"../ErrorMessage\";\n\nexport class ErrorBoundary extends Component {\n  state = {\n    error: false,\n  };\n\n  componentDidCatch(error) {\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n    return this.props.children;\n  }\n}\n","import styled from \"styled-components\";\n\nexport const StyledImage = styled.img`\n  margin: 0 auto;\n  display: block;\n`;\n","import { StyledImage } from './styled'\n\nimport error from '../../assets/img/error.gif'\n\n\nexport const ErrorMessage = () => {\n\n    return (\n        <div>\n            <StyledImage src={error} alt=\"error\"/>\n        </div>\n    )\n}","import { useCallback, useEffect, useState } from \"react\";\n\nexport const useAxios = (dataFunc) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(async () => {\n\n    try {\n      const response = await dataFunc();\n      setData(response);\n      setLoading(false);\n      return response;\n    } catch (error) {\n      setLoading(false);\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }, [dataFunc]);\n  \n  useEffect(() => {\n    request();\n  }, [request])\n\n  return { request, data, loading, error };\n};\n","import styled from \"styled-components\";\nimport { Spinner } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledWrapper = styled.div`\n  display: flex;\n  margin: 50px auto;\n  flex-direction: column;\n`;\n\nexport const StyledHeader = styled.h3`\n  font-weight: bold;\n  margin: 0px auto;\n`;\n\nexport const StyledText = styled.p`\n  margin: 20px 0;\n  font-size: 16px;\n`;\n\nexport const StyledDate = styled.span`\n  font-style: italic;\n`;\n\nexport const StyledLink = styled(Link)`\n  border: 1px solid rgb(110 45 53);\n  color: rgb(110 45 53);\n  text-decoration: none;\n  padding: 10px 15px;\n  min-width: 85px;\n  border-radius: 5px;\n  &:hover {\n    color: white;\n    background-color: rgb(110 45 53);\n  }\n`;\n\nexport const StyledSpinner = styled(Spinner)`\n  display: flex;\n  margin: 0 auto;\n  color: rgb(110 45 53);\n`;\n","import { getBook } from \"../../api/books\";\nimport { useParams } from \"react-router-dom\";\nimport { Container } from \"reactstrap\";\nimport { ErrorMessage } from \"../ErrorMessage\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  StyledHeader,\n  StyledWrapper,\n  StyledText,\n  StyledDate,\n  StyledLink,\n  StyledSpinner,\n} from \"./styled\";\nimport moment from \"moment\";\nimport { useAxios } from \"../../hooks\";\n\nexport const BookInfo = () => {\n\n  const { routeId } = useParams();\n  const { data, error, loading} = useAxios(() => getBook(routeId))\n\n  const location = useLocation();\n  const { offset } = location.state;\n\n  const { description, title, publishDate } = data;\n  const date = moment(publishDate).format(\"DD/MM/YYYY\");\n\n  return (\n    <Container>\n      {loading && !error && <StyledSpinner />}\n      {!loading && !error && (\n        <>\n          <StyledWrapper>\n            <StyledHeader>{title}</StyledHeader>\n            <StyledText>{description}</StyledText>\n            <StyledDate>{date}</StyledDate>\n          </StyledWrapper>\n          <StyledLink state={{ offset: offset }} to=\"/books\">\n            Back to list\n          </StyledLink>\n        </>\n      )}\n      {error && !loading && <ErrorMessage />}\n    </Container>\n  );\n};\n","import { BookInfo } from \"../../components/BookInfo/BookInfo\";\nimport { ErrorBoundary } from \"../../components/ErrorBoundary\";\n\nexport default function SingleBook() {\n  return (\n    <ErrorBoundary>\n      <BookInfo />\n    </ErrorBoundary>\n  );\n}\n"],"names":["client","axios","baseURL","interceptors","response","use","data","error","Promise","reject","getAllBooks","get","getBook","id","ErrorBoundary","state","this","setState","ErrorMessage","props","children","Component","StyledImage","styled","src","alt","useAxios","dataFunc","useState","setData","loading","setLoading","setError","request","useCallback","useEffect","StyledWrapper","StyledHeader","StyledText","StyledDate","StyledLink","Link","StyledSpinner","Spinner","BookInfo","routeId","useParams","offset","useLocation","description","title","publishDate","date","moment","format","to","SingleBook"],"sourceRoot":""}