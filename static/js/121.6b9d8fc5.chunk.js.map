{"version":3,"file":"static/js/121.6b9d8fc5.chunk.js","mappings":"kMAEaA,E,MAASC,GAAAA,OAAa,CAC/BC,QAAS,iDAGbF,EAAOG,aAAaC,SAASC,KACzB,SAACD,GAAD,OAAcA,EAASE,QACvB,SAACC,GAAD,OAAWC,QAAQC,OAAOF,MCNvB,IAAMG,EAAW,yCAAG,4GAEVV,EAAOW,IAAI,UAFD,+JAAH,qDAQXC,EAAO,yCAAG,WAAOC,GAAP,+FAENb,EAAOW,IAAP,iBAAqBE,IAFf,+JAAH,uD,6HCPPC,EAAb,gMACEC,MAAQ,CACNR,OAAO,GAFX,kDAKE,SAAkBA,GAChBS,KAAKC,SAAS,CACZV,OAAO,MAPb,oBAWE,WACE,OAAIS,KAAKD,MAAMR,OACN,SAACW,EAAA,EAAD,IAEFF,KAAKG,MAAMC,aAftB,GAAmCC,EAAAA,Y,oECDtBC,E,QAAcC,GAAAA,IAAH,8D,6DCGXL,EAAe,WAExB,OACI,0BACI,SAACI,EAAD,CAAaE,IAAKjB,EAAOkB,IAAI,c,0KCL5BC,EAAgBH,EAAAA,GAAAA,IAAH,2FAMbI,EAAeJ,EAAAA,GAAAA,GAAH,mEAKZK,EAAaL,EAAAA,GAAAA,EAAH,+DAKVM,EAAaN,EAAAA,GAAAA,KAAH,+CAIVO,GAAaP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,+PAaVS,GAAgBT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,uF,4BCtBbW,EAAW,WACtB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAO5B,EAAP,KAAciC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,YACR/B,EAAAA,EAAAA,GAAQ6B,GACLG,MAAK,SAACxC,GACLiC,EAAYjC,GACZmC,GAAW,MAEZM,OAAM,WACLL,GAAS,MAEVM,SAAQ,WACPP,GAAW,QAEd,CAACE,IAEJ,IAAQM,EAAoCX,EAApCW,YAAaC,EAAuBZ,EAAvBY,MAAOC,EAAgBb,EAAhBa,YACtBC,EAAOC,IAAOF,GAAaG,OAAO,cAExC,OACE,UAAC,KAAD,WACGd,IAAYe,OAAOC,KAAKlB,GAAUmB,SAAWhD,IAAS,SAACyB,EAAD,KACrDM,GAAWF,IAAa7B,IACxB,iCACE,UAACmB,EAAD,YACE,SAACC,EAAD,UAAeqB,KACf,SAACpB,EAAD,UAAamB,KACb,SAAClB,EAAD,UAAaqB,QAEf,SAACpB,EAAD,CAAY0B,GAAG,SAAf,6BAGHjD,IAAU+B,IAAW,SAACpB,EAAA,EAAD,Q,UCjDb,SAASuC,IACtB,OACE,SAAC3C,EAAA,EAAD,WACE,SAACoB,EAAD","sources":["api/client.js","api/books.js","components/ErrorBoundary/ErrorBoundary.js","components/ErrorMessage/styled.js","components/ErrorMessage/ErrorMessage.js","components/BookInfo/styled.js","components/BookInfo/BookInfo.js","pages/SingleBookPage/SingleBookPage.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const client = axios.create({\n    baseURL: \"https://fakerestapi.azurewebsites.net/api/v1\"\n});\n\nclient.interceptors.response.use(\n    (response) => response.data, \n    (error) => Promise.reject(error));","import { client } from \"./client\";\n\nexport const getAllBooks = async () => {\n  try {\n    return await client.get(\"/Books\");\n  } catch (error) {\n    return error ;\n  }\n};\n\nexport const getBook = async (id) => {\n  try {\n    return await client.get(`/Books/${id}`);\n  } catch (error) {\n    return error;\n  }\n};\n","import { Component } from \"react\";\nimport { ErrorMessage } from \"../ErrorMessage\";\n\nexport class ErrorBoundary extends Component {\n  state = {\n    error: false,\n  };\n\n  componentDidCatch(error) {\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n    return this.props.children;\n  }\n}\n","import styled from \"styled-components\";\n\nexport const StyledImage = styled.img`\n  margin: 0 auto;\n  display: block;\n`;\n","import { StyledImage } from './styled'\n\nimport error from '../../assets/img/error.gif'\n\n\nexport const ErrorMessage = () => {\n\n    return (\n        <div>\n            <StyledImage src={error} alt=\"error\"/>\n        </div>\n    )\n}","import styled from \"styled-components\";\nimport { Spinner } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledWrapper = styled.div`\n  display: flex;\n  margin: 50px auto;\n  flex-direction: column;\n`;\n\nexport const StyledHeader = styled.h2`\n  font-weight: bold;\n  margin: 0px auto;\n`;\n\nexport const StyledText = styled.p`\n  margin: 20px 0;\n  font-size: 20px;\n`;\n\nexport const StyledDate = styled.span`\n  font-style: italic;\n`;\n\nexport const StyledLink = styled(Link)`\n  border: 1px solid rgb(110 45 53);\n  color: rgb(110 45 53);\n  text-decoration: none;\n  padding: 10px 15px;\n  min-width: 85px;\n  border-radius: 5px;\n  &:hover {\n    color: white;\n    background-color: rgb(110 45 53);\n  }\n`;\n\nexport const StyledSpinner = styled(Spinner)`\n  display: flex;\n  margin: 0 auto;\n  color: rgb(110 45 53);\n`;\n","import { useEffect, useState } from \"react\";\nimport { getBook } from \"../../api/books\";\nimport { useParams } from \"react-router-dom\";\nimport { Container } from \"reactstrap\";\nimport { ErrorMessage } from \"../ErrorMessage\";\nimport {\n  StyledHeader,\n  StyledWrapper,\n  StyledText,\n  StyledDate,\n  StyledLink,\n  StyledSpinner,\n} from \"./styled\";\nimport moment from \"moment\";\n\nexport const BookInfo = () => {\n  const [bookInfo, setBookInfo] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const { routeId } = useParams();\n\n  useEffect(() => {\n    getBook(routeId)\n      .then((response) => {\n        setBookInfo(response);\n        setLoading(false);\n      })\n      .catch(() => {\n        setError(true);\n      })\n      .finally(() => {\n        setLoading(false);\n      })\n  }, [routeId]);\n\n  const { description, title, publishDate } = bookInfo;\n  const date = moment(publishDate).format(\"DD/MM/YYYY\");\n\n  return (\n    <Container>\n      {loading && !Object.keys(bookInfo).length && !error && <StyledSpinner />}\n      {!loading && bookInfo && !error && (\n        <>\n          <StyledWrapper>\n            <StyledHeader>{title}</StyledHeader>\n            <StyledText>{description}</StyledText>\n            <StyledDate>{date}</StyledDate>\n          </StyledWrapper>\n          <StyledLink to=\"/books\">Back to list</StyledLink>\n        </>\n      )}\n      {error && !loading && <ErrorMessage />}\n    </Container>\n  );\n};\n","import { BookInfo } from \"../../components/BookInfo/BookInfo\";\nimport { ErrorBoundary } from \"../../components/ErrorBoundary\";\n\nexport default function SingleBookPage() {\n  return (\n    <ErrorBoundary>\n      <BookInfo />\n    </ErrorBoundary>\n  );\n}\n"],"names":["client","axios","baseURL","interceptors","response","use","data","error","Promise","reject","getAllBooks","get","getBook","id","ErrorBoundary","state","this","setState","ErrorMessage","props","children","Component","StyledImage","styled","src","alt","StyledWrapper","StyledHeader","StyledText","StyledDate","StyledLink","Link","StyledSpinner","Spinner","BookInfo","useState","bookInfo","setBookInfo","loading","setLoading","setError","routeId","useParams","useEffect","then","catch","finally","description","title","publishDate","date","moment","format","Object","keys","length","to","SingleBookPage"],"sourceRoot":""}