{"version":3,"file":"static/js/956.a42bf0b4.chunk.js","mappings":"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","sources":["components/ErrorBoundary/ErrorBoundary.js","components/ErrorMessage/styled.js","components/ErrorMessage/ErrorMessage.js","pages/Books/components/BookCard/styled.js","pages/Books/components/BookCard/BookCard.js","pages/Books/styled.js","pages/Books/selectors/bookList.js","components/Pagination/styled.js","components/Pagination/BookPagination.js","components/Pagination/selectors/pagination.js","store/modal/selectors/modal.js","components/Modal/styled.js","components/Modal/Modal.js","pages/Books/components/BookForm/BookForm.js","pages/Books/components/CreateBookModal/CreateBookModal.js","pages/Books/components/DeleteBookModal/styled.js","pages/Books/components/UpdateBookModal/UpdateBookModal.js","pages/Books/components/DeleteBookModal/DeleteBookModal.js","components/PreLoader/PreLoader.js","pages/Books/BookList.js"],"sourcesContent":["import { Component } from \"react\";\nimport { ErrorMessage } from \"../ErrorMessage\";\n\nexport class ErrorBoundary extends Component {\n  state = {\n    error: false,\n  };\n\n  componentDidCatch(error) {\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n    return this.props.children;\n  }\n}\n","import styled from \"styled-components\";\n\nexport const StyledImage = styled.img`\n  margin: 0 auto;\n  display: block;\n`;\n","import { StyledImage } from './styled'\n\nimport error from '../../assets/img/error.gif'\n\n\nexport const ErrorMessage = () => {\n\n    return (\n        <div>\n            <StyledImage src={error} alt=\"error\"/>\n        </div>\n    )\n}","import styled from \"styled-components\";\nimport { Card, CardSubtitle, CardText, CardTitle } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"antd/lib/button\";\n\nexport const StyledCard = styled(Card)`\n  position: relative;\n  margin: 10px;\n  width: 400px;\n  height: 260px;\n  text-align: center;\n  padding: 7px;\n  border-radius: 2px;\n  box-shadow: 0px 1px 5px rgb(244 233 235);\n`;\n\nexport const StyledButton = styled(Button)`\n  position: absolute;\n  right: ${({ edit }) => (edit ? \"50px\" : \"10px\")};\n  color: rgb(110 45 53);\n  padding: 3px 7px;\n  background-color: transparent;\n  border-color: rgb(110 45 53);\n\n  &:hover {\n    background-color: rgb(110 45 53);\n    border-color: rgb(110 45 53);\n    color: #fff;\n  }\n  &:active:focus {\n    background-color: rgb(110 45 53);\n    border-color: rgb(110 45 53);\n  }\n  &:active {\n    background-color: rgb(110 45 53);\n    border-color: rgb(110 45 53);\n    color: #fff;\n  }\n  &:focus {\n    box-shadow: 0 0 0 0.25rem rgb(110 45 53 / 50%);\n    background-color: rgb(110 45 53);\n    border-color: rgb(110 45 53);\n    color: #fff;\n  }\n`;\n\nexport const StyledCardTitle = styled(CardTitle)`\n  font-weight: bold;\n  margin-top: 40px;\n  min-height: 50px;\n`;\n\nexport const StyledCardText = styled(CardText)`\n  min-height: 80px;\n  margin-bottom: 15px;\n  font-size: 16px;\n`;\n\nexport const StyledDate = styled(CardSubtitle)`\n  font-style: italic;\n`;\n\nexport const StyledLink = styled(Link)`\n  border: 1px solid rgb(110 45 53);\n  color: rgb(110 45 53);\n  text-decoration: none;\n  position: absolute;\n  right: 10px;\n  padding: 3px 5px;\n  min-width: 65px;\n  border-radius: 3px;\n  &:hover {\n    color: white;\n    background-color: rgb(110 45 53);\n  }\n`;\n\nexport const StyledWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","import { CardBody } from \"reactstrap\";\nimport moment from \"moment\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport {\n  StyledCard,\n  StyledLink,\n  StyledWrapper,\n  StyledCardTitle,\n  StyledCardText,\n  StyledDate,\n  StyledButton,\n} from \"./styled\";\n\nexport const BookCard = ({ data, onEdit, onDelete }) => {\n  const { _id: id, title, description, publishDate } = data;\n  const shortText =\n    description.length > 130 ? `${description.slice(0, 130)}...` : description;\n  const date = moment(publishDate).format(\"DD/MM/YYYY\");\n\n  return (\n    <StyledCard size=\"small\">\n      <CardBody>\n        <StyledButton onClick={() => onEdit(id)} color=\"ligth\" edit=\"edit\">\n          <EditOutlined />\n        </StyledButton>\n        <StyledButton onClick={() => onDelete(data)} color=\"ligth\">\n          <DeleteOutlined />\n        </StyledButton>\n\n        <StyledCardTitle tag=\"h5\">{title}</StyledCardTitle>\n        <StyledCardText tag=\"p\">{shortText}</StyledCardText>\n        <StyledWrapper>\n          <StyledDate>{date}</StyledDate>\n          <StyledLink to={`/books/${id}`}>More</StyledLink>\n        </StyledWrapper>\n      </CardBody>\n    </StyledCard>\n  );\n};\n","import styled from \"styled-components\";\nimport { Spinner, Container } from \"reactstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport Button from \"antd/lib/button\";\n\nexport const StyledButton = styled(Button)`\n  display: block;\n  margin: 10px auto;\n  background-color: white;\n  color: rgb(110 45 53);\n  border-color: rgb(110 45 53);\n  padding: 5px 10px;\n  &:hover {\n    background-color: rgb(110 45 53);\n    border-color: rgb(110 45 53);\n    color: #fff;\n  }\n  &:active:focus {\n    background-color: rgb(110 45 53);\n    border-color: rgb(110 45 53);\n  }\n  &:active {\n    background-color: rgb(110 45 53);\n    border-color: rgb(110 45 53);\n  }\n  &:focus {\n    box-shadow: 0 0 0 0.25rem rgb(110 45 53 / 50%);\n    color: rgb(110 45 53);\n  }\n`;\n\nexport const StyledSpinner = styled(Spinner)`\n  display: flex;\n  margin: 0 auto;\n  color: rgb(110 45 53);\n`;\n\nexport const StyledContainer = styled(Container)`\n  display: flex;\n  padding-right: 0;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nexport const StyledReactPaginate = styled(ReactPaginate)`\n  display: flex;\n  list-style: none;\n  margin: 30px auto;\n  padding-left: 0px;\n  width: fit-content;\n  border: 1px solid rgb(186 182 182);\n  border-radius: 5px;\n\n  li {\n    padding: 7px 15px;\n    color: rgb(110 45 53);\n    border-left: 1px solid #dee2e6;\n    &.active {\n      background-color: rgb(110 45 53);\n      color: white;\n    }\n  }\n  a {\n    color: rgb(110 45 53);\n    text-decoration: none;\n    &.disabled {\n      pointer-events: none;\n      color: gray;\n    }\n  }\n`;\n","import { createSelector } from \"reselect\";\n\nconst bookListStateSelector = (state) => state.bookList;\n\nexport const bookListLoadingSelector = createSelector(\n  bookListStateSelector,\n  (bookList) => bookList.loading\n);\n\nexport const bookListDataSelector = createSelector(\n  bookListStateSelector,\n  (bookList) => bookList.data\n);\n\nexport const bookListErrorSelector = createSelector(\n  bookListStateSelector,\n  (bookList) => bookList.error\n);\n\nexport const bookListUpdateStateSelector = createSelector(\n  bookListStateSelector,\n  (bookList) => bookList.updateState\n);\n\nexport const bookListCreateStateSelector = createSelector(\n  bookListStateSelector,\n  (bookList) => bookList.createState\n);\n\nexport const bookListDeleteStateSelector = createSelector(\n  bookListStateSelector,\n  (bookList) => bookList.deleteState\n);\n","import { Pagination, PaginationLink } from \"reactstrap\";\n\nimport styled from \"styled-components\";\n\nexport const StyledPagination = styled(Pagination)`\n  ul {\n    justify-content: center;\n    margin: 20px 0;\n    text-align: center;\n    padding-bottom: 20px;\n  }\n`;\n\nexport const StyledPaginationLink = styled(PaginationLink)`\n  min-width: 42px;\n  color: ${({ active }) => (active ? \"rgb(255 255 255)\" : \"rgb(110 45 53)\")};\n  background-color: ${({ active }) =>\n    active ? \"rgb(110 45 53)\" : \"rgb(255 255 255)\"};\n  &:hover {\n    background-color: rgb(122 122 122 / 60%);\n    color: rgb(255 255 255);\n  }\n  &:focus {\n    color: rgb(255 255 255);\n    background-color: rgb(110 45 53);\n    box-shadow: none;\n  }\n`;\n","import { PaginationItem } from \"reactstrap\";\nimport { StyledPagination, StyledPaginationLink } from \"./styled\";\n\nexport const BookPagination = (props) => {\n  const { currentPage, pageCount, onPagination } = props;\n\n\n  return (\n    <StyledPagination>\n      <PaginationItem disabled={currentPage <= 0}>\n        <StyledPaginationLink\n          onClick={() => onPagination(currentPage - 1)}\n          previous\n          tag=\"button\"\n        />\n      </PaginationItem>\n\n      {[...Array(pageCount).keys()].map((page, index) => (\n        <PaginationItem key={page}>\n          <StyledPaginationLink \n          tag=\"button\"\n          active={index === currentPage ? 'active' : null}\n          onClick={() => onPagination(index)}>\n            {index + 1}\n          </StyledPaginationLink>\n        </PaginationItem>\n      ))}\n\n      <PaginationItem disabled={currentPage >= pageCount - 1}>\n        <StyledPaginationLink\n          tag=\"button\"\n          onClick={() => onPagination(currentPage + 1)}\n          next\n        />\n      </PaginationItem>\n    </StyledPagination>\n  );\n};\n","import { createSelector } from \"reselect\";\n\nconst bookListStateSelector = (state) => state.bookList;\nconst paginationSelector = (state) => state.pagination;\n\nexport const bookListPaginationSelector = createSelector(\n  bookListStateSelector,\n  paginationSelector,\n  (bookList, pagination) => {\n    return {\n      page: pagination.page,\n      offset: pagination.offset,\n      itemsPerPage: pagination.itemsPerPage,\n      endOffset: pagination.offset + pagination.itemsPerPage,\n    };\n  }\n);\n\n","export const modalStateSelector = (state) => state.modal;\n","import styled from \"styled-components\";\n\nimport Button from \"antd/lib/button\";\n\nexport const StyledButton = styled(Button)`\n  color: rgb(110 45 53);\n  padding: 3px 15px;\n  background-color: transparent;\n  border-color: rgb(110 45 53 / 56%);\n\n  &:hover {\n    background-color: rgb(110 45 53 / 56%);\n    border-color: rgb(110 45 53/ 56%);\n    color: #fff;\n  }\n  &:active:focus {\n    background-color: rgb(110 45 53/ 56%);\n    border-color: rgb(110 45 53/ 56%);\n  }\n  &:active {\n    background-color: rgb(110 45 53/ 56%);\n    border-color: rgb(110 45 53/ 56%);\n    color: #fff;\n  }\n  &:focus {\n    box-shadow: 0 0 0 0.25rem rgb(110 45 53 / 50%);\n    background-color: rgb(110 45 53);\n    border-color: rgb(110 45 53);\n    color: #fff;\n  }\n`;\n","import { Button, Modal as AntdModal } from \"antd\";\nimport { StyledButton } from \"./styled\";\nexport const Modal = ({ children, onCancel, formName, loading, onSave }) => {\n  return (\n    <AntdModal\n      visible={true}\n      onCancel={onCancel}\n      confirmLoading={loading}\n      footer={[\n        <StyledButton key=\"cancel\" onClick={onCancel}>\n          Cancel\n        </StyledButton>,\n        <Button\n          key=\"submit\"\n          type=\"primary\"\n          danger\n          loading={loading}\n          htmlType=\"submit\"\n          form={formName}\n          onClick={onSave}\n        >\n          Confirm\n        </Button>,\n      ]}\n    >\n      {children}\n    </AntdModal>\n  );\n};\n\nModal.defaultProps = {\n  onSave: () => {},\n};\n","import React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { Input, Typography } from \"antd\";\n\nconst CreateBookSchema = yup.object().shape({\n  title: yup.string().required(\"This field is required\"),\n  description: yup.string().required(\"This field is required\"),\n  pageCount: yup\n    .number()\n    .required(\"This field is required\")\n    .integer(\"Value must be an integer\")\n    .positive(\"Value must be a positive number.\"),\n});\n\nexport const BookForm = (props) => {\n  const { mode, data, name, onSave } = props;\n  const { Text, Title } = Typography;\n  const { TextArea } = Input;\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(CreateBookSchema),\n  });\n\n  const onSubmit = async (values) => {\n    try {\n      if (!data) {\n        onSave(values);\n      } else {\n        onSave({ ...values, id: data._id });\n      }\n    } catch (error) {}\n  };\n\n  return (\n    <>\n      {mode === \"create\" && <Title level={3}>Create Book</Title>}\n      {mode === \"update\" && <Title level={3}>Update Book</Title>}\n      <form onSubmit={handleSubmit(onSubmit)} id={name}>\n        <label>Book Title</label>\n        <Controller\n          render={({ field }) => <Input {...field} />}\n          name=\"title\"\n          control={control}\n          defaultValue={data?.title || \"\"}\n        />\n        {errors.title && (\n          <Text style={{ display: \"block\" }} type=\"danger\">\n            {errors.title.message}\n          </Text>\n        )}\n        <label>Description</label>\n        <Controller\n          render={({ field }) => (\n            <TextArea style={{ height: \"80px\" }} {...field} />\n          )}\n          name=\"description\"\n          control={control}\n          defaultValue={data?.description || \"\"}\n        />\n        {errors.description && (\n          <Text style={{ display: \"block\" }} type=\"danger\">\n            {errors.description.message}\n          </Text>\n        )}\n\n        <label>Page Count</label>\n        <Controller\n          render={({ field }) => <Input {...field} />}\n          name=\"pageCount\"\n          control={control}\n          defaultValue={data?.pageCount}\n        />\n        {errors.pageCount && (\n          <Text style={{ display: \"block\" }} type=\"danger\">\n            {errors.pageCount.message}\n          </Text>\n        )}\n      </form>\n    </>\n  );\n};\n","import { useSelector } from \"react-redux\";\nimport { Modal } from \"../../../../components/Modal\";\nimport { bookListCreateStateSelector } from \"../../selectors/bookList\";\nimport { BookForm } from \"../BookForm/BookForm\";\n\nexport const CreateBookModal = ({ onSave, onCancel }) => {\n  const { loading } = useSelector(bookListCreateStateSelector);\n\n  return (\n    <Modal form=\"create\" onCancel={onCancel} formName=\"create\">\n      <BookForm mode=\"create\" onSave={onSave} name=\"create\" />\n    </Modal>\n  );\n};\n","import styled from \"styled-components\";\nimport Spin from \"antd/lib/spin\";\n\nexport const StyledSpin = styled(Spin)`\n  display: block;\n  .ant-spin-dot {\n    display: flex;\n    margin: 10px auto;\n  }\n  .ant-spin-dot-item {\n    background-color: rgb(110 45 53);\n  }\n`;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Modal } from \"../../../../components/Modal\";\nimport { bookListUpdateStateSelector } from \"../../selectors/bookList\";\nimport { bookItemUpdateDataFetch } from \"../../thunk/bookList\";\nimport { BookForm } from \"../BookForm/BookForm\";\nimport { StyledSpin } from \"../DeleteBookModal/styled\";\n\nexport const UpdateBookModal = ({ onSave, onCancel }) => {\n  const dispatch = useDispatch();\n  const { fetchData, data, loading } = useSelector(bookListUpdateStateSelector);\n\n  useEffect(() => {\n    dispatch(bookItemUpdateDataFetch(fetchData));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Modal form=\"edit\" onCancel={onCancel} formName=\"edit\">\n      <StyledSpin spinning={loading} />\n      {!loading && data && (\n        <BookForm mode=\"edit\" onSave={onSave} data={data} name=\"edit\" />\n      )}\n    </Modal>\n  );\n};\n","import { useSelector } from \"react-redux\";\nimport { Modal } from \"../../../../components/Modal\";\nimport { bookListDeleteStateSelector } from \"../../selectors/bookList\";\nimport { StyledSpin } from \"./styled\";\nimport { Space, Typography } from \"antd\";\n\nexport const DeleteBookModal = ({ onSave, onCancel }) => {\n  const { loading, data } = useSelector(bookListDeleteStateSelector);\n\n  const { Title, Text } = Typography;\n\n  return (\n    <Modal onCancel={onCancel} onSave={() => onSave(data)} formName=\"edit\">\n      <StyledSpin spinning={loading} />\n      {!loading && data && (\n        <Space direction=\"vertical\">\n          <Title level={5}>\n            Are you sure that you want to delete{\" \"}\n            <Text underline italic>\n              {data.title}\n            </Text>\n            ?\n          </Title>\n\n          <Text>\n            The item will be deleted immediately. You can not undo this action.\n          </Text>\n        </Space>\n      )}\n    </Modal>\n  );\n};\n","import { Skeleton, Space } from \"antd\";\n\nexport const PreLoader = () => {\n  return (\n    <>\n      <Space\n        direction=\"vertical\"\n        size=\"large\"\n        style={{ alignItems: \"flex-end\", width: \"400px\", margin: \"20px 10px\" }}\n      >\n        <Space>\n          <Skeleton.Button shape=\"round\" size=\"small\" active />\n          <Skeleton.Button shape=\"round\" size=\"small\" active />\n        </Space>\n        <Skeleton.Input size=\"default\" active style={{ width: \"380px\" }} />\n        <Skeleton.Input size=\"large\" active style={{ width: \"380px\" }} />\n        <Skeleton.Input size=\"default\" active style={{ width: \"380px\" }} />\n      </Space>\n    </>\n  );\n};\n","import { useCallback, useEffect } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { BookCard } from \"./components/BookCard\";\nimport { ErrorMessage } from \"../../components/ErrorMessage\";\nimport { ErrorBoundary } from \"../../components/ErrorBoundary\";\nimport { StyledButton, StyledContainer } from \"./styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as selectors from \"./selectors/bookList\";\nimport { BookPagination } from \"../../components/Pagination\";\nimport {\n  bookItemCreate,\n  bookItemDelete,\n  bookItemUpdate,\n  bookListFetch,\n} from \"./thunk/bookList\";\nimport { bookPaginationSet } from \"../../components/Pagination/reducer/pagination\";\nimport { bookListPaginationSelector } from \"../../components/Pagination/selectors/pagination\";\nimport { modalStateSelector } from \"../../store/modal/selectors/modal\";\nimport { modalOpenToggleAction } from \"../../store/modal/reducer/modal\";\nimport { CreateBookModal } from \"./components/CreateBookModal\";\nimport { UpdateBookModal } from \"./components/UpdateBookModal\";\nimport {\n  bookDeleteItemDataSetAction,\n  bookUpdateItemIdSetAction,\n} from \"./reducer/bookList\";\nimport { DeleteBookModal } from \"./components/DeleteBookModal\";\nimport { PreLoader } from \"../../components/PreLoader\";\n\nconst BookList = () => {\n  const loading = useSelector(selectors.bookListLoadingSelector);\n  const error = useSelector(selectors.bookListErrorSelector);\n  const data = useSelector(selectors.bookListDataSelector);\n  const { offset, page, itemsPerPage, endOffset } = useSelector(\n    bookListPaginationSelector\n  );\n\n  const { open, name } = useSelector(modalStateSelector);\n\n  const bookList = data.slice(offset, endOffset);\n  const pageCount = Math.ceil(data.length / itemsPerPage);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(bookListFetch());\n  }, [dispatch, page]);\n\n  const handlePagination = (index) => {\n    const newOffset = (index * itemsPerPage) % data.length;\n    dispatch(bookPaginationSet({ page: index, offset: newOffset }));\n  };\n\n  const handleCreateBook = (values) => {\n    dispatch(bookItemCreate(values));\n  };\n\n  const handleUpdateBook = (values) => {\n    dispatch(bookItemUpdate(values));\n  };\n\n  const handleDeleteBook = (item) => {\n    dispatch(bookItemDelete(item));\n  };\n\n  const handleCreateModalOpenToggle = () => {\n    dispatch(modalOpenToggleAction({ name: \"Create\" }));\n  };\n\n  const handleEditModalOpen = useCallback((id) => {\n    dispatch(bookUpdateItemIdSetAction({ id }));\n    dispatch(modalOpenToggleAction({ name: \"Update\" }));\n    // eslint-disable-next-line\n  }, []);\n\n  const handleEditModalClose = useCallback(() => {\n    dispatch(modalOpenToggleAction({ name: \"Update\" }));\n    // eslint-disable-next-line\n  }, []);\n\n  const handleDeleteModalOpen = useCallback((item) => {\n    dispatch(bookDeleteItemDataSetAction(item));\n    dispatch(modalOpenToggleAction({ name: \"Delete\" }));\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <ErrorBoundary>\n      <Container>\n        <StyledButton onClick={handleCreateModalOpenToggle} color=\"light\">\n          Create book\n        </StyledButton>\n        {\n          <>\n            <StyledContainer>\n              {loading && !error && (\n                <>\n                  {[...Array(bookList.length).keys()].map((item) => (\n                    <PreLoader key={item} />\n                  ))}\n                </>\n              )}\n              {!loading && !error && data.length > 0 && (\n                <>\n                  {bookList.map((book) => (\n                    <BookCard\n                      key={book._id}\n                      data={book}\n                      onEdit={handleEditModalOpen}\n                      onDelete={handleDeleteModalOpen}\n                    />\n                  ))}\n                </>\n              )}\n            </StyledContainer>\n            <BookPagination\n              currentPage={page}\n              onPagination={handlePagination}\n              pageCount={pageCount}\n            />\n          </>\n        }\n        {open && name === \"Create\" && (\n          <CreateBookModal\n            onSave={handleCreateBook}\n            onCancel={handleCreateModalOpenToggle}\n          />\n        )}\n        {open && name === \"Update\" && (\n          <UpdateBookModal\n            onSave={handleUpdateBook}\n            onCancel={handleEditModalClose}\n          />\n        )}\n        {open && name === \"Delete\" && (\n          <DeleteBookModal\n            onSave={handleDeleteBook}\n            onCancel={handleDeleteModalOpen}\n          />\n        )}\n        {error && !loading && <ErrorMessage />}\n      </Container>\n    </ErrorBoundary>\n  );\n};\n\nexport default BookList;\n"],"names":["ErrorBoundary","state","error","this","setState","ErrorMessage","props","children","Component","StyledImage","styled","src","alt","StyledCard","Card","StyledButton","Button","edit","StyledCardTitle","CardTitle","StyledCardText","CardText","StyledDate","CardSubtitle","StyledLink","Link","StyledWrapper","BookCard","data","onEdit","onDelete","id","_id","title","description","publishDate","shortText","length","slice","date","moment","format","size","onClick","color","EditOutlined","DeleteOutlined","tag","to","StyledContainer","Spinner","Container","ReactPaginate","bookListStateSelector","bookList","bookListLoadingSelector","createSelector","loading","bookListDataSelector","bookListErrorSelector","bookListUpdateStateSelector","updateState","bookListCreateStateSelector","createState","bookListDeleteStateSelector","deleteState","StyledPagination","Pagination","StyledPaginationLink","PaginationLink","active","BookPagination","currentPage","pageCount","onPagination","disabled","previous","Array","keys","map","page","index","next","bookListPaginationSelector","pagination","offset","itemsPerPage","endOffset","modalStateSelector","modal","Modal","onCancel","formName","onSave","visible","confirmLoading","footer","type","danger","htmlType","form","defaultProps","CreateBookSchema","yup","shape","required","integer","positive","BookForm","mode","name","Text","Typography","Title","TextArea","Input","useForm","resolver","yupResolver","control","handleSubmit","errors","formState","onSubmit","values","level","render","field","defaultValue","style","display","message","height","CreateBookModal","useSelector","StyledSpin","Spin","UpdateBookModal","dispatch","useDispatch","fetchData","useEffect","bookItemUpdateDataFetch","spinning","DeleteBookModal","direction","underline","italic","PreLoader","alignItems","width","margin","selectors","open","Math","ceil","bookListFetch","handleCreateModalOpenToggle","modalOpenToggleAction","handleEditModalOpen","useCallback","bookUpdateItemIdSetAction","handleEditModalClose","handleDeleteModalOpen","item","bookDeleteItemDataSetAction","book","newOffset","bookPaginationSet","bookItemCreate","bookItemUpdate","bookItemDelete"],"sourceRoot":""}