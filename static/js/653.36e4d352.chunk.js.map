{"version":3,"file":"static/js/653.36e4d352.chunk.js","mappings":"iNAGaA,EAAb,gMACEC,MAAQ,CACNC,OAAO,GAFX,kDAKE,SAAkBA,GAChBC,KAAKC,SAAS,CACZF,OAAO,MAPb,oBAWE,WACE,OAAIC,KAAKF,MAAMC,OACN,SAACG,EAAA,EAAD,IAEFF,KAAKG,MAAMC,aAftB,GAAmCC,EAAAA,Y,oECDtBC,E,QAAcC,GAAAA,IAAH,8D,6DCGXL,EAAe,WAExB,OACI,0BACI,SAACI,EAAD,CAAaE,IAAKT,EAAOU,IAAI,c,iJCN5BC,GAAcH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,gI,SCAXK,EAAY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAC7BC,GAAgBC,EAAAA,EAAAA,UAAS,CAAEH,QAAAA,EAASC,KAAAA,IAElCG,EACNF,EADME,cAAeC,EACrBH,EADqBG,kBAAmBC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,KAAMC,EAC5DN,EAD4DM,WAG9D,OACE,UAACX,GAAD,kBAAiBO,KAAjB,IAAkCK,SAAO,EAAzC,WACE,2BACGH,EAAaI,KAAI,SAACC,GAAD,OAChB,iCAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQH,KAAI,SAACI,GAAD,OACvB,iCAAQA,EAAOC,kBAAf,aAAkCD,EAAOE,OAAO,yBAKxD,oCAAWX,KAAX,aACGE,EAAKG,KAAI,SAACO,GAET,OADAT,EAAWS,IAET,iCAAQA,EAAIC,eAAZ,aACGD,EAAIE,MAAMT,KAAI,SAACU,GACd,OAAO,iCAAQA,EAAKC,gBAAb,aAA8BD,EAAKJ,OAAO,4B,UCvBpDM,GAAkB5B,EAAAA,EAAAA,IAAO6B,EAAAA,GAAP7B,CAAH,sEAKf8B,GAAgB9B,EAAAA,EAAAA,IAAO+B,EAAAA,GAAP/B,CAAH,uF,oBCNpBgC,EAA6B,SAACzC,GAAD,OAAWA,EAAM0C,mBAEvCC,GAA+BC,EAAAA,EAAAA,IACxCH,GACA,SAACC,GAAD,OAAuBA,EAAkBG,WAG9BC,GAA4BF,EAAAA,EAAAA,IACvCH,GACA,SAACC,GAAD,OAAuBA,EAAkB1B,QAG9B+B,GAA6BH,EAAAA,EAAAA,IACxCH,GACA,SAACC,GAAD,OAAuBA,EAAkBzC,S,2BCN9B,SAAS+C,IACtB,IAAMH,GAAUI,EAAAA,EAAAA,IAAYC,GACtBjD,GAAQgD,EAAAA,EAAAA,IAAYC,GACpBC,GAAWF,EAAAA,EAAAA,IAAYC,GAEvBE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,SACR,CAACH,IAEJ,IAAMrC,GAAUyC,EAAAA,EAAAA,UACd,iBAAM,CACJ,CACEC,OAAQ,KACRC,SAAU,MAEZ,CACED,OAAQ,OACRC,SAAU,SAEZ,CACED,OAAQ,cACRC,SAAU,cACVC,KAAM,gBAAWC,EAAX,EAAGzB,KAAQyB,MAAX,gBAA4BA,EAAMC,MAAM,EAAG,KAA3C,SAER,CACEJ,OAAQ,QACRC,SAAU,aAEZ,CACED,OAAQ,cACRC,SAAU,cACVC,KAAM,gBAAWC,EAAX,EAAGzB,KAAQyB,MAAX,OAAyBE,IAAOF,GAAOG,OAAO,mBAGxD,IAGF,OACE,SAAChE,EAAA,EAAD,WACE,UAACsC,EAAD,WACGQ,IAAY5C,IAAS,SAACsC,EAAD,KACpBM,IAAY5C,IAAS,SAACa,EAAD,CAAWC,QAASA,EAASC,KAAMmC,IACzDlD,IAAU4C,IAAW,SAACzC,EAAA,EAAD","sources":["components/ErrorBoundary/ErrorBoundary.js","components/ErrorMessage/styled.js","components/ErrorMessage/ErrorMessage.js","pages/Statistics/components/BookTable/styled.js","pages/Statistics/components/BookTable/BookTable.js","pages/Statistics/styled.js","pages/Statistics/selectors/bookItem.js","pages/Statistics/Statistic.js"],"sourcesContent":["import { Component } from \"react\";\nimport { ErrorMessage } from \"../ErrorMessage\";\n\nexport class ErrorBoundary extends Component {\n  state = {\n    error: false,\n  };\n\n  componentDidCatch(error) {\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n    return this.props.children;\n  }\n}\n","import styled from \"styled-components\";\n\nexport const StyledImage = styled.img`\n  margin: 0 auto;\n  display: block;\n`;\n","import { StyledImage } from './styled'\n\nimport error from '../../assets/img/error.gif'\n\n\nexport const ErrorMessage = () => {\n\n    return (\n        <div>\n            <StyledImage src={error} alt=\"error\"/>\n        </div>\n    )\n}","import { Table } from \"reactstrap\";\nimport styled from \"styled-components\";\n\nexport const StyledTable = styled(Table)`\n  box-shadow: 0px 1px 5px rgb(177 167 169);\n  border-radius: 5px;\n  td {\n    min-width: 100px;\n  }\n`;\n","import { useTable } from \"react-table\";\nimport { StyledTable } from \"./styled\";\n\nexport const BookTable = ({ columns, data }) => {\n  const tableInstance = useTable({ columns, data });\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    tableInstance;\n\n  return (\n    <StyledTable {...getTableProps()} striped>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </StyledTable>\n  );\n};\n","import { Container, Spinner } from \"reactstrap\";\nimport styled from \"styled-components\";\n\nexport const StyledContainer = styled(Container)`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const StyledSpinner = styled(Spinner)`\n  display: flex;\n  margin: 0 auto;\n  color: rgb(110 45 53);\n`;","import { createSelector } from \"reselect\";\n\nconst bookStatisticStateSelector = (state) => state.bookListStatistic;\n\nexport const bookStatisticLoadingSelector = createSelector(\n    bookStatisticStateSelector,\n    (bookListStatistic) => bookListStatistic.loading\n  );\n  \n  export const bookStatisticDataSelector = createSelector(\n    bookStatisticStateSelector,\n    (bookListStatistic) => bookListStatistic.data\n  );\n  \n  export const bookStatisticErrorSelector = createSelector(\n    bookStatisticStateSelector,\n    (bookListStatistic) => bookListStatistic.error\n  );","import { useMemo, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BookTable } from \"./components/BookTable\";\nimport { ErrorMessage } from \"../../components/ErrorMessage\";\nimport { StyledContainer, StyledSpinner } from \"./styled\";\nimport { ErrorBoundary } from \"../../components/ErrorBoundary\";\nimport * as selectors from \"./selectors/bookItem\";\nimport { bookStatisticFetchStart } from \"./actions/bookList\";\nimport moment from \"moment\";\n\nexport default function Statistics() {\n  const loading = useSelector(selectors.bookStatisticLoadingSelector);\n  const error = useSelector(selectors.bookStatisticErrorSelector);\n  const bookData = useSelector(selectors.bookStatisticDataSelector);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(bookStatisticFetchStart());\n  }, [dispatch]);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"ID\",\n        accessor: \"id\",\n      },\n      {\n        Header: \"NAME\",\n        accessor: \"title\",\n      },\n      {\n        Header: \"DESCRIPTION\",\n        accessor: \"description\",\n        Cell: ({ cell: { value } }) => `${value.slice(0, 130)}...`,\n      },\n      {\n        Header: \"PAGES\",\n        accessor: \"pageCount\",\n      },\n      {\n        Header: \"CREATE DATE\",\n        accessor: \"publishDate\",\n        Cell: ({ cell: { value } }) => moment(value).format(\"DD/MM/YYYY\"),\n      },\n    ],\n    []\n  );\n\n  return (\n    <ErrorBoundary>\n      <StyledContainer>\n        {loading && !error && <StyledSpinner />}\n        {!loading && !error && <BookTable columns={columns} data={bookData} />}\n        {error && !loading && <ErrorMessage />}\n      </StyledContainer>\n    </ErrorBoundary>\n  );\n}\n"],"names":["ErrorBoundary","state","error","this","setState","ErrorMessage","props","children","Component","StyledImage","styled","src","alt","StyledTable","Table","BookTable","columns","data","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","striped","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","StyledContainer","Container","StyledSpinner","Spinner","bookStatisticStateSelector","bookListStatistic","bookStatisticLoadingSelector","createSelector","loading","bookStatisticDataSelector","bookStatisticErrorSelector","Statistics","useSelector","selectors","bookData","dispatch","useDispatch","useEffect","bookStatisticFetchStart","useMemo","Header","accessor","Cell","value","slice","moment","format"],"sourceRoot":""}