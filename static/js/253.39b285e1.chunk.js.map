{"version":3,"file":"static/js/253.39b285e1.chunk.js","mappings":"kMAEaA,E,MAASC,GAAAA,OAAa,CAC/BC,QAAS,iDAGbF,EAAOG,aAAaC,SAASC,KACzB,SAACD,GAAD,OAAcA,EAASE,QACvB,SAACC,GAAD,OAAWC,QAAQC,OAAOF,MCNvB,IAAMG,EAAW,yCAAG,4GAEVV,EAAOW,IAAI,UAFD,+JAAH,qDAQXC,EAAO,yCAAG,WAAOC,GAAP,+FAENb,EAAOW,IAAP,iBAAqBE,IAFf,+JAAH,uD,6HCPPC,EAAb,gMACEC,MAAQ,CACNR,OAAO,GAFX,kDAKE,SAAkBA,GAChBS,KAAKC,SAAS,CACZV,OAAO,MAPb,oBAWE,WACE,OAAIS,KAAKD,MAAMR,OACN,SAACW,EAAA,EAAD,IAEFF,KAAKG,MAAMC,aAftB,GAAmCC,EAAAA,Y,oECDtBC,E,QAAcC,GAAAA,IAAH,8D,6DCGXL,EAAe,WAExB,OACI,0BACI,SAACI,EAAD,CAAaE,IAAKjB,EAAOkB,IAAI,c,gGCP5BC,EAAW,SAACC,GACvB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOtB,EAAP,KAAauB,EAAb,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOrB,EAAP,KAAcyB,EAAd,KAEMC,GAAUC,EAAAA,EAAAA,cAAW,uBAAC,kHAGDP,IAHC,cAGlBvB,EAHkB,OAIxByB,EAAQzB,GACR2B,GAAW,GALa,kBAMjB3B,GANiB,gCAQxB2B,GAAW,GACXC,EAAS,EAAD,IATgB,yBAWxBD,GAAW,GAXa,4EAazB,CAACJ,IAMJ,OAJAQ,EAAAA,EAAAA,YAAU,WACRF,MACC,CAACA,IAEG,CAAEA,QAAAA,EAAS3B,KAAAA,EAAMwB,QAAAA,EAASvB,MAAAA,K,qKCvBtB6B,GAAcb,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAH,gI,SCAXe,EAAY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASjC,EAAW,EAAXA,KAC7BkC,GAAgBC,EAAAA,EAAAA,UAAS,CAAEF,QAAAA,EAASjC,KAAAA,IAElCoC,EACNF,EADME,cAAeC,EACrBH,EADqBG,kBAAmBC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,KAAMC,EAC5DN,EAD4DM,WAG9D,OACE,UAACV,GAAD,kBAAiBM,KAAjB,IAAkCK,SAAO,EAAzC,WACE,2BACGH,EAAaI,KAAI,SAACC,GAAD,OAChB,iCAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQH,KAAI,SAACI,GAAD,OACvB,iCAAQA,EAAOC,kBAAf,aAAkCD,EAAOE,OAAO,yBAKxD,oCAAWX,KAAX,aACGE,EAAKG,KAAI,SAACO,GAET,OADAT,EAAWS,IAET,iCAAQA,EAAIC,eAAZ,aACGD,EAAIE,MAAMT,KAAI,SAACU,GACd,OAAO,iCAAQA,EAAKC,gBAAb,aAA8BD,EAAKJ,OAAO,4B,UCvBpDM,GAAkBrC,EAAAA,EAAAA,IAAOsC,EAAAA,GAAPtC,CAAH,sEAKfuC,GAAgBvC,EAAAA,EAAAA,IAAOwC,EAAAA,GAAPxC,CAAH,uF,mBCAbyC,EAAY,WAEvB,OAAiCtC,EAAAA,EAAAA,GAAShB,EAAAA,GAAlCJ,EAAR,EAAQA,KAAMwB,EAAd,EAAcA,QAASvB,EAAvB,EAAuBA,MAEjBgC,GAAU0B,EAAAA,EAAAA,UACd,iBAAM,CACJ,CACEC,OAAQ,KACRC,SAAU,MAEZ,CACED,OAAQ,OACRC,SAAU,SAEZ,CACED,OAAQ,cACRC,SAAU,cACVC,KAAM,gBAAWC,EAAX,EAAGX,KAAQW,MAAX,gBAA4BA,EAAMC,MAAM,EAAG,KAA3C,SAER,CACEJ,OAAQ,QACRC,SAAU,aAEZ,CACED,OAAQ,cACRC,SAAU,cACVC,KAAM,gBAAWC,EAAX,EAAGX,KAAQW,MAAX,OAAyBE,IAAOF,GAAOG,OAAO,mBAGxD,IAGF,OACE,UAACZ,EAAD,WACG9B,IAAYvB,IAAS,SAACuD,EAAD,KACpBhC,IAAYvB,IACZ,SAAC+B,EAAD,CAAWC,QAASA,EAASjC,KAAMA,IAEpCC,IAAUuB,IAAW,SAACZ,EAAA,EAAD,QC3Cb,SAASuD,IAEtB,OACE,SAAC3D,EAAA,EAAD,WACE,SAACkD,EAAD","sources":["api/client.js","api/books.js","components/ErrorBoundary/ErrorBoundary.js","components/ErrorMessage/styled.js","components/ErrorMessage/ErrorMessage.js","hooks/useAxios.js","components/Statistic/BookTable/styled.js","components/Statistic/BookTable/BookTable.js","components/Statistic/styled.js","components/Statistic/Statistic.js","pages/Statistics/Statistic.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const client = axios.create({\n    baseURL: \"https://fakerestapi.azurewebsites.net/api/v1\"\n});\n\nclient.interceptors.response.use(\n    (response) => response.data, \n    (error) => Promise.reject(error));","import { client } from \"./client\";\n\nexport const getAllBooks = async () => {\n  try {\n    return await client.get(\"/Books\");\n  } catch (error) {\n    return error ;\n  }\n};\n\nexport const getBook = async (id) => {\n  try {\n    return await client.get(`/Books/${id}`);\n  } catch (error) {\n    return error;\n  }\n};\n","import { Component } from \"react\";\nimport { ErrorMessage } from \"../ErrorMessage\";\n\nexport class ErrorBoundary extends Component {\n  state = {\n    error: false,\n  };\n\n  componentDidCatch(error) {\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n    return this.props.children;\n  }\n}\n","import styled from \"styled-components\";\n\nexport const StyledImage = styled.img`\n  margin: 0 auto;\n  display: block;\n`;\n","import { StyledImage } from './styled'\n\nimport error from '../../assets/img/error.gif'\n\n\nexport const ErrorMessage = () => {\n\n    return (\n        <div>\n            <StyledImage src={error} alt=\"error\"/>\n        </div>\n    )\n}","import { useCallback, useEffect, useState } from \"react\";\n\nexport const useAxios = (dataFunc) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(async () => {\n\n    try {\n      const response = await dataFunc();\n      setData(response);\n      setLoading(false);\n      return response;\n    } catch (error) {\n      setLoading(false);\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }, [dataFunc]);\n  \n  useEffect(() => {\n    request();\n  }, [request])\n\n  return { request, data, loading, error };\n};\n","import { Table } from \"reactstrap\";\nimport styled from \"styled-components\";\n\nexport const StyledTable = styled(Table)`\n  box-shadow: 0px 1px 5px rgb(177 167 169);\n  border-radius: 5px;\n  td {\n    min-width: 100px;\n  }\n`;\n","import { useTable } from \"react-table\";\nimport { StyledTable } from \"./styled\";\n\nexport const BookTable = ({ columns, data }) => {\n  const tableInstance = useTable({ columns, data });\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    tableInstance;\n\n  return (\n    <StyledTable {...getTableProps()} striped>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </StyledTable>\n  );\n};\n","import { Container, Spinner } from \"reactstrap\";\nimport styled from \"styled-components\";\n\nexport const StyledContainer = styled(Container)`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const StyledSpinner = styled(Spinner)`\n  display: flex;\n  margin: 0 auto;\n  color: rgb(110 45 53);\n`;","import { useMemo } from \"react\";\nimport { getAllBooks } from \"../../api/books\";\nimport { useAxios } from \"../../hooks\";\nimport { BookTable } from \"./BookTable\";\nimport { ErrorMessage } from \"../ErrorMessage\";\nimport { StyledContainer, StyledSpinner } from \"./styled\";\nimport moment from \"moment\";\n\nexport const Statistic = () => {\n\n  const { data, loading, error } = useAxios(getAllBooks);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"ID\",\n        accessor: \"id\",\n      },\n      {\n        Header: \"NAME\",\n        accessor: \"title\",\n      },\n      {\n        Header: \"DESCRIPTION\",\n        accessor: \"description\",\n        Cell: ({ cell: { value } }) => `${value.slice(0, 130)}...`,\n      },\n      {\n        Header: \"PAGES\",\n        accessor: \"pageCount\",\n      },\n      {\n        Header: \"CREATE DATE\",\n        accessor: \"publishDate\",\n        Cell: ({ cell: { value } }) => moment(value).format(\"DD/MM/YYYY\"),\n      },\n    ],\n    []\n  );\n\n  return (\n    <StyledContainer>\n      {loading && !error && <StyledSpinner />}\n      {!loading && !error && (\n        <BookTable columns={columns} data={data} />\n      )}\n      {error && !loading && <ErrorMessage />}\n    </StyledContainer>\n  );\n};\n","import { ErrorBoundary } from \"../../components/ErrorBoundary\";\nimport { Statistic } from \"../../components/Statistic\";\n\nexport default function Statistics() {\n  \n  return (\n    <ErrorBoundary>\n      <Statistic />\n    </ErrorBoundary>\n  );\n}\n"],"names":["client","axios","baseURL","interceptors","response","use","data","error","Promise","reject","getAllBooks","get","getBook","id","ErrorBoundary","state","this","setState","ErrorMessage","props","children","Component","StyledImage","styled","src","alt","useAxios","dataFunc","useState","setData","loading","setLoading","setError","request","useCallback","useEffect","StyledTable","Table","BookTable","columns","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","striped","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","StyledContainer","Container","StyledSpinner","Spinner","Statistic","useMemo","Header","accessor","Cell","value","slice","moment","format","Statistics"],"sourceRoot":""}